AWSTemplateFormatVersion: '2010-09-09'
Description: ECS cluster, service, and autoscaling

Parameters:
  TargetGroupArn:
    Type: String
    Description: ARN of the blue target group (imported from alb stack)
  AlbSecurityGroupId:
    Type: String
    Description: Security group ID of the ALB (imported from alb stack)
  ClusterName:
    Type: String
    Default: PhotoGalleryCluster
  TaskCpu:
    Type: String
    Default: 256
  TaskMemory:
    Type: String
    Default: 512
  VpcId:
    Type: String
    Description: VPC ID (imported)
  PrivateSubnetIds:
    Type: String
    Description: Comma-separated private subnet IDs
  EcsTaskExecutionRoleArn:
    Type: String
    Description: ARN of task execution role
  EcsTaskRoleArn:
    Type: String
    Description: ARN of task role
  EcsSecurityGroupId:
    Type: String
    Description: Security group ID for ECS tasks (imported from database stack)

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: photo-gallery-task
      Cpu: !Ref TaskCpu
      Memory: !Ref TaskMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref EcsTaskExecutionRoleArn
      TaskRoleArn: !Ref EcsTaskRoleArn
      ContainerDefinitions:
        - Name: photo-container
          Image: !ImportValue ecr-RepositoryUri
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/photo-gallery
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: SPRING_DATASOURCE_URL
              Value: !Sub jdbc:postgresql://*!ImportValue database-RdsEndpoint:*!ImportValue database-RdsPort/photodb
            - Name: AWS_S3_BUCKET
              Value: !ImportValue storage-BucketName
            - Name: AWS_REGION
              Value: !Ref AWS::Region

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/photo-gallery
      RetentionInDays: 14

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: photo-service
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Split [ ',', !Ref PrivateSubnetIds ]
          SecurityGroups:
            - !Ref EcsSecurityGroupId
          AssignPublicIp: DISABLED
      LoadBalancers:
        - ContainerName: photo-container
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroupArn
      DeploymentController:
        Type: CODE_DEPLOY

  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 4
      MinCapacity: 1
      ResourceId: !Sub service/${ECSCluster}/${ECSService.Name}
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: CpuScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization

Outputs:
  ClusterName:
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${AWS::StackName}-ClusterName
  ServiceName:
    Value: !GetAtt ECSService.Name
    Export:
      Name: !Sub ${AWS::StackName}-ServiceName
  TaskDefinitionArn:
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}-TaskDefinitionArn
