AWSTemplateFormatVersion: '2010-09-09'
Description: ALB for ECS service

Parameters:
  VpcId:
    Type: String
  PublicSubnetIds:
    Type: String
  AlbName:
    Type: String
    Default: PhotoGalleryALB

Resources:
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Photo-ALB-SG

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref AlbName
      Subnets: !Split [ ',', !Ref PublicSubnetIds ]
      SecurityGroups:
        - !Ref AlbSecurityGroup
      Scheme: internet-facing
      Type: application

  BlueTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: blue-tg
      Port: 8080
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  GreenTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: green-tg
      Port: 8080
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref BlueTargetGroup

Outputs:
  LoadBalancerDnsName:
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: !Sub ${AWS::StackName}-LoadBalancerDnsName
  BlueTargetGroupArn:
    Value: !Ref BlueTargetGroup
    Export:
      Name: !Sub ${AWS::StackName}-BlueTargetGroupArn
  GreenTargetGroupArn:
    Value: !Ref GreenTargetGroup
    Export:
      Name: !Sub ${AWS::StackName}-GreenTargetGroupArn
  ListenerArn:
    Value: !Ref Listener
    Export:
      Name: !Sub ${AWS::StackName}-ListenerArn
  AlbSecurityGroupId:
    Value: !Ref AlbSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-AlbSecurityGroupId